Stack.____Init:
	BeginFunc 56 ;
	_tmp0 = 100 ;
	_tmp1 = 4 ;
	_tmp2 = 0 ;
	_tmp3 = _tmp0 < _tmp2 ;
	_tmp4 = _tmp0 == _tmp2 ;
	_tmp5 = _tmp3 || _tmp4 ;
	IfZ _tmp5 Goto _L0 ;
	_tmp6 = "Decaf runtime error: Array size is <= 0\n" ;
	PushParam _tmp6 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L0:
	_tmp7 = _tmp0 * _tmp1 ;
	_tmp8 = _tmp1 + _tmp7 ;
	PushParam _tmp8 ;
	_tmp9 = LCall _Alloc ;
	PopParams 4 ;
	*(_tmp9) = _tmp0 ;
	*(this + 8) = _tmp9 ;
	_tmp10 = 0 ;
	*(this + 4) = _tmp10 ;
	_tmp11 = 3 ;
	PushParam _tmp11 ;
	PushParam this ;
	_tmp12 = *(this) ;
	_tmp13 = *(_tmp12 + 4) ;
	ACall _tmp13 ;
	PopParams 8 ;
	EndFunc ;
Stack.____Push:
	BeginFunc 72 ;
	_tmp14 = *(this + 8) ;
	_tmp15 = *(this + 4) ;
	_tmp16 = 0 ;
	_tmp17 = *(_tmp14) ;
	_tmp18 = _tmp15 < _tmp16 ;
	_tmp19 = _tmp17 < _tmp15 ;
	_tmp20 = _tmp17 == _tmp15 ;
	_tmp21 = _tmp19 || _tmp20 ;
	_tmp22 = _tmp21 || _tmp18 ;
	IfZ _tmp22 Goto _L1 ;
	_tmp23 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp23 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L1:
	_tmp24 = 4 ;
	_tmp25 = _tmp15 * _tmp24 ;
	_tmp26 = _tmp25 + _tmp24 ;
	_tmp27 = _tmp14 + _tmp26 ;
	*(_tmp27) = i ;
	_tmp28 = *(_tmp27) ;
	_tmp29 = *(this + 4) ;
	_tmp30 = 1 ;
	_tmp31 = _tmp29 + _tmp30 ;
	*(this + 4) = _tmp31 ;
	EndFunc ;
Stack.____Pop:
	BeginFunc 88 ;
	_tmp32 = *(this + 8) ;
	_tmp33 = *(this + 4) ;
	_tmp34 = 1 ;
	_tmp35 = _tmp33 - _tmp34 ;
	_tmp36 = 0 ;
	_tmp37 = *(_tmp32) ;
	_tmp38 = _tmp35 < _tmp36 ;
	_tmp39 = _tmp37 < _tmp35 ;
	_tmp40 = _tmp37 == _tmp35 ;
	_tmp41 = _tmp39 || _tmp40 ;
	_tmp42 = _tmp41 || _tmp38 ;
	IfZ _tmp42 Goto _L2 ;
	_tmp43 = "Decaf runtime error: Array subscript out of bound..." ;
	PushParam _tmp43 ;
	LCall _PrintString ;
	PopParams 4 ;
	LCall _Halt ;
_L2:
	_tmp44 = 4 ;
	_tmp45 = _tmp35 * _tmp44 ;
	_tmp46 = _tmp45 + _tmp44 ;
	_tmp47 = _tmp32 + _tmp46 ;
	_tmp48 = *(_tmp47) ;
	val = _tmp48 ;
	_tmp49 = *(this + 4) ;
	_tmp50 = 1 ;
	_tmp51 = _tmp49 - _tmp50 ;
	*(this + 4) = _tmp51 ;
	Return val ;
	EndFunc ;
Stack.____NumElems:
	BeginFunc 4 ;
	_tmp52 = *(this + 4) ;
	Return _tmp52 ;
	EndFunc ;
VTable Stack =
	Stack.____Init,
	Stack.____Push,
	Stack.____Pop,
	Stack.____NumElems,
; 
main:
	BeginFunc 180 ;
	_tmp53 = 8 ;
	_tmp54 = 4 ;
	_tmp55 = _tmp54 + _tmp53 ;
	PushParam _tmp55 ;
	_tmp56 = LCall _Alloc ;
	PopParams 4 ;
	_tmp57 = Stack ;
	*(_tmp56) = _tmp57 ;
	s = _tmp56 ;
	PushParam s ;
	_tmp58 = *(s) ;
	_tmp59 = *(_tmp58) ;
	ACall _tmp59 ;
	PopParams 4 ;
	_tmp60 = 3 ;
	PushParam _tmp60 ;
	PushParam s ;
	_tmp61 = *(s) ;
	_tmp62 = *(_tmp61 + 4) ;
	ACall _tmp62 ;
	PopParams 8 ;
	_tmp63 = 7 ;
	PushParam _tmp63 ;
	PushParam s ;
	_tmp64 = *(s) ;
	_tmp65 = *(_tmp64 + 4) ;
	ACall _tmp65 ;
	PopParams 8 ;
	_tmp66 = 4 ;
	PushParam _tmp66 ;
	PushParam s ;
	_tmp67 = *(s) ;
	_tmp68 = *(_tmp67 + 4) ;
	ACall _tmp68 ;
	PopParams 8 ;
	PushParam s ;
	_tmp69 = *(s) ;
	_tmp70 = *(_tmp69 + 12) ;
	_tmp71 = ACall _tmp70 ;
	PopParams 4 ;
	PushParam _tmp71 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp72 = " " ;
	PushParam _tmp72 ;
	LCall _PrintString ;
	PopParams 4 ;
	PushParam s ;
	_tmp73 = *(s) ;
	_tmp74 = *(_tmp73 + 8) ;
	_tmp75 = ACall _tmp74 ;
	PopParams 4 ;
	PushParam _tmp75 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp76 = " " ;
	PushParam _tmp76 ;
	LCall _PrintString ;
	PopParams 4 ;
	PushParam s ;
	_tmp77 = *(s) ;
	_tmp78 = *(_tmp77 + 8) ;
	_tmp79 = ACall _tmp78 ;
	PopParams 4 ;
	PushParam _tmp79 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp80 = " " ;
	PushParam _tmp80 ;
	LCall _PrintString ;
	PopParams 4 ;
	PushParam s ;
	_tmp81 = *(s) ;
	_tmp82 = *(_tmp81 + 8) ;
	_tmp83 = ACall _tmp82 ;
	PopParams 4 ;
	PushParam _tmp83 ;
	LCall _PrintInt ;
	PopParams 4 ;
	_tmp84 = " " ;
	PushParam _tmp84 ;
	LCall _PrintString ;
	PopParams 4 ;
	PushParam s ;
	_tmp85 = *(s) ;
	_tmp86 = *(_tmp85 + 12) ;
	_tmp87 = ACall _tmp86 ;
	PopParams 4 ;
	PushParam _tmp87 ;
	LCall _PrintInt ;
	PopParams 4 ;
	EndFunc ;
